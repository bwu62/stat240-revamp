[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"Intro (maybe write last?)thins hit:use book\nbook conventions\nsearch\nsyntax highlighting\nauto link help pages\nbook conventionssearchsyntax highlightingauto link help pagesview source & edit contributionsprerequisiteswill teach everything, just provide foundation learningacknowledgments impact contributionsstuff add:dark mode?add exercises pageauto-index generator _common.R?cheatsheet repositorysample graded, commentated papers (example , AB, B, BC, C, D, F)grade comparing reference papersconditional stratified sample papers based distribution grades groupafter paring samples, ask Derek & Cameron help grading evaluation calibrating paperspare , use focused sample calibrate TAs/instructors needed?glossary?notes self:use params control:\ncourse directory\nhw/ds solution generation files (separate private repo?)\ncourse directoryhw/ds solution generation files (separate private repo?)build db past 240 statsrethink discord management","code":""},{"path":"setup.html","id":"setup","chapter":"1 Setup","heading":"1 Setup","text":"chapter take steps necessary fully setup computer. several things need :First, section 1.1 install R Rstudio.Next, section 1.2 install necessary R packages configure recommended Rstudio settings.Finally, section 1.3 setup organization system files.","code":""},{"path":"setup.html","id":"setup-install","chapter":"1 Setup","heading":"1.1 R/Rstudio setup","text":"using R Rstudio throughout course.R free open-source statistical computing software.Rstudio IDE (integrated development environment) makes developing R much easier.\nprefer, can also use different IDE like Visual Studio Jupyter.\nprefer, can also use different IDE like Visual Studio Jupyter.R Rstudio two different programs need installed! Also, previously installed R Rstudio, highly recommended first completely uninstall reinstalling latest version avoid conflicts (instructions Windows Mac).First, install latest R release, version 4.4.1 released Jun 14, 2024; install Rstudio. instructions separated operating system, depending Windows Mac machine.Linux system, follow one linked instructions .Chromebook, try steps.","code":""},{"path":"setup.html","id":"setup-win","chapter":"1 Setup","heading":"1.1.1 Windows instructions","text":"Download R-4.4.1-win.exe run , accepting default settings.Download R-4.4.1-win.exe run , accepting default settings.Download Rstudio-latest.exe run , accepting default settings.Download Rstudio-latest.exe run , accepting default settings.Sometimes, R may need recompile package installation, require Rtools utility. download right version, check system’s page look “System type” line.\nshows “… x64-based processor”, download Rtools installer run , accepting default settings.\nshows “… ARM-based processor”, download Rtools installer run , accepting default settings.\nSometimes, R may need recompile package installation, require Rtools utility. download right version, check system’s page look “System type” line.shows “… x64-based processor”, download Rtools installer run , accepting default settings.shows “… ARM-based processor”, download Rtools installer run , accepting default settings.Now, R Rstudio setup. check installation, find “Rstudio” start menu run . asked choose installation, just accept default click OK.get window looks like , ’re set ready move next section!","code":""},{"path":"setup.html","id":"setup-mac","chapter":"1 Setup","heading":"1.1.2 Mac instructions","text":"First, need determine right R installer file specific machine. Open Apple menu top left corner screen open “mac”.\nshows “Chip: Apple M1/M2/M3”, download R-4.4.1-arm64.pkg run , accepting default settings.\nshows “Processor: …Intel Core”, download R-4.4.1-x86_64.pkg run , accepting default settings.\nget error, check OS version window. ’s older (.e. <11) may need either upgrade OS download older version .\nshows “Chip: Apple M1/M2/M3”, download R-4.4.1-arm64.pkg run , accepting default settings.shows “Processor: …Intel Core”, download R-4.4.1-x86_64.pkg run , accepting default settings.get error, check OS version window. ’s older (.e. <11) may need either upgrade OS download older version .Now, download Rstudio-latest.dmg install . Note dmg virtual disk image file, need follow steps install :\nDouble click file open . mount virtual drive desktop open new Finder window.\nnew window, drag Rstudio icon Applications directory. install computer.\nOpen new Finder window, go Applications directory, find new Rstudio program drag dock easy access.\n(Optional) can now unmount virtual disk. Right click mounted virtual disk desktop choose “Unmount”, alternatively find mounted drive right side dock drag trash bin. can also delete .dmg install file.\nDouble click file open . mount virtual drive desktop open new Finder window.new window, drag Rstudio icon Applications directory. install computer.Open new Finder window, go Applications directory, find new Rstudio program drag dock easy access.(Optional) can now unmount virtual disk. Right click mounted virtual disk desktop choose “Unmount”, alternatively find mounted drive right side dock drag trash bin. can also delete .dmg install file.many () systems, two additional programs need installed everything run smoothly. recommended everyone install just case (’s harm didn’t actually need ).\nDownload XQuartz-2.8.5.pkg run , accepting default settings. installs tool Rstudio uses display certain outputs.\nUsing either Spotlight, Launchpad, Applications folder, open “Terminal” type copy line xcode-select --install hit enter, follow -screen instructions. may asked fingerprint password (note password show type, normal done security purposes).\nDownload XQuartz-2.8.5.pkg run , accepting default settings. installs tool Rstudio uses display certain outputs.Using either Spotlight, Launchpad, Applications folder, open “Terminal” type copy line xcode-select --install hit enter, follow -screen instructions. may asked fingerprint password (note password show type, normal done security purposes).machines, R Rstudio may blocked OS overabundance caution. Follow steps unblock try .Now, assuming everything went smoothly, R Rstudio setup. check installation, find “Rstudio” Dock Applications directory run . asked choose installation, just accept default click OK.get window looks like , ’re set!","code":""},{"path":"setup.html","id":"setup-packs-config","chapter":"1 Setup","heading":"1.2 Packages/config","text":"continuing, make sure can open Rstudio correct version (R-4.4.1) installed!Next, install necessary packages configure recommended options improve workflow.Open Rstudio. Console window, type copy line install.packages(c(\"tidyverse\",\"rmarkdown\")) hit enter.\nRstudio asks whether “use personal library”, choose yes.\nRstudio asks whether “install source”, first try choosing work people. fails, try repeating step 1, time choose yes.\nMake sure see either “successfully unpacked” “downloaded binary packages ” console messages confirm installation succeeded.Open Rstudio. Console window, type copy line install.packages(c(\"tidyverse\",\"rmarkdown\")) hit enter.Rstudio asks whether “use personal library”, choose yes.Rstudio asks whether “install source”, first try choosing work people. fails, try repeating step 1, time choose yes.Make sure see either “successfully unpacked” “downloaded binary packages ” console messages confirm installation succeeded.Next, menu bar top, go “Tools” > “Global Options”.\nfirst page, “Workspace” section, set following:\nTurn “Restore .RData workspace startup”\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.\n\nChange “Save workspace .Rdata exit:” “Never”\nstops Rstudio asking shutdown want save session, also preventing clutter.\n\n\nNext, “R Markdown” page Options window, set following:\nChange “Show output preview :” “Viewer Pane”\nimproves workflow displaying plots Viewer pane instead opening new window.\n\nTurn “Show output inline R Markdown documents”\nalso improves workflow displaying output console instead inline documents.\n\n\n(Optional) wish customize interface, can go “Appearance” page change font theme. 1\nPress OK save changes.\nLOTS options can feel free explore later , now move .Next, menu bar top, go “Tools” > “Global Options”.first page, “Workspace” section, set following:\nTurn “Restore .RData workspace startup”\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.\n\nChange “Save workspace .Rdata exit:” “Never”\nstops Rstudio asking shutdown want save session, also preventing clutter.\n\nTurn “Restore .RData workspace startup”\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.Change “Save workspace .Rdata exit:” “Never”\nstops Rstudio asking shutdown want save session, also preventing clutter.\nstops Rstudio asking shutdown want save session, also preventing clutter.Next, “R Markdown” page Options window, set following:\nChange “Show output preview :” “Viewer Pane”\nimproves workflow displaying plots Viewer pane instead opening new window.\n\nTurn “Show output inline R Markdown documents”\nalso improves workflow displaying output console instead inline documents.\n\nChange “Show output preview :” “Viewer Pane”\nimproves workflow displaying plots Viewer pane instead opening new window.\nimproves workflow displaying plots Viewer pane instead opening new window.Turn “Show output inline R Markdown documents”\nalso improves workflow displaying output console instead inline documents.\nalso improves workflow displaying output console instead inline documents.(Optional) wish customize interface, can go “Appearance” page change font theme. 1Press OK save changes.LOTS options can feel free explore later , now move .Due poor design, need repeat previous R Markdown configuration steps Rstudio duplicates settings another menu.\nmenu bar top, go “File” > “New File” > “R Markdown”. Ignore options new window click “OK” create new R Markdown file (learn R Markdown files later).\nnew editor pane, open gear-icon dropdown menu make sure reselect options (highlighted red).\nDue poor design, need repeat previous R Markdown configuration steps Rstudio duplicates settings another menu.menu bar top, go “File” > “New File” > “R Markdown”. Ignore options new window click “OK” create new R Markdown file (learn R Markdown files later).new editor pane, open gear-icon dropdown menu make sure reselect options (highlighted red).Now R/Rstudio properly setup.","code":""},{"path":"setup.html","id":"setup-files","chapter":"1 Setup","heading":"1.3 File organization","text":"lot files keep track course, highly recommended create neat directory structure computer help organize files. recommend directory structure similar :tree diagram shows somewhere computer (“..”) make “STAT240” directory. Inside, directories like “homework” “discussion” subdirectory specific assignment (e.g. “hw01”, “hw02”, “ds01”, “ds02”, etc..).also recommend creating directories “data”, place datasets download; “notes”, can place notes download take; “project”, can place project files assigned later. necessary, can also create directories discretion.Make sure STAT240 folder backed cloud synchronized app like OneDrive, Box, iCloud. programs sometimes interfere R/Rstudio may also cut larger datasets.recommend pick different parent directory (“..”) “Desktop” “Documents” since often backed default many modern systems. good alternative either “Downloads” directory usually backed , user’s home directory (instructions Windows Mac).creation, can make folder convenient access making shortcut desktop, pinning somewhere accessible like Quick Access Windows Dock Macs.","code":"..\n└── STAT240\n    ├── data\n    ├── discussion\n    │   ├── ds01\n    │   ├── ds02\n    │   └── ds03\n    |         ⋮\n    ├── homework\n    │   ├── hw01\n    │   ├── hw02\n    │   └── hw03\n    |         ⋮\n    ├── notes\n    └── project"},{"path":"setup.html","id":"setup-troubleshooting-faq","chapter":"1 Setup","heading":"1.4 Setup troubleshooting FAQ","text":"**FAQ added collect commonly encountered problems**","code":""},{"path":"rstudio-intro.html","id":"rstudio-intro","chapter":"2 Intro to R/Rstudio","heading":"2 Intro to R/Rstudio","text":"chapter introduce basics Rstudio help develop workflow testing R code producing beautiful R Markdown documents, using throughout semester.","code":""},{"path":"rstudio-intro.html","id":"rstudio-why","chapter":"2 Intro to R/Rstudio","heading":"2.1 Why Rstudio?","text":"Rstudio free open-source IDE (integrated development environment) designed help facilitate development R code. course don’t need (can write R code using text editor execute terminal) using Rstudio gives access host modern conveniences, just name :R code completion & highlightingeasy access interpreter console, plots, history, help, etc.integration scientific communication tools (e.g. R Markdown, Shiny, etc.)robust debugging toolseasy package/environment managementcustom project workflows (e.g. building websites, presentations, packages, etc.)GitHub SVN integrationand much …learn small fraction Rstudio offer course. always, encouraged explore .","code":""},{"path":"rstudio-intro.html","id":"rstudio-interface","chapter":"2 Intro to R/Rstudio","heading":"2.2 Rstudio interface","text":"default interface setup Rstudio. course can customize , see ---box:brief description purpose tab. ones using frequently course highlighted bold.section find Console, Terminal, Background Jobs tabs\nConsole: arguably important tab Rstudio. provides direct access R interpreter, allowing run code see outputs.\n\nuseful tips working console:\ncan use TAB key autocomplete code type. works built functions, user-defined objects, even file paths (later). highly recommended make use autocomplete much possible can help prevent typo errors code.\ncan also easily rerun previously executed commands either using keyboard arrow keys navigate history, even search history using CTRL/CMD + R.\nTerminal: tab opens terminal current working directory (see section ??). default, Git Bash terminal Windows zsh terminal Macs, can easily changed Options menu.\nBackground Jobs: Rstudio may sometimes run certain operations background jobs . Alternatively, can also run background R scripts desire.\nConsole: arguably important tab Rstudio. provides direct access R interpreter, allowing run code see outputs.can use TAB key autocomplete code type. works built functions, user-defined objects, even file paths (later). highly recommended make use autocomplete much possible can help prevent typo errors code.can also easily rerun previously executed commands either using keyboard arrow keys navigate history, even search history using CTRL/CMD + R.Terminal: tab opens terminal current working directory (see section ??). default, Git Bash terminal Windows zsh terminal Macs, can easily changed Options menu.Background Jobs: Rstudio may sometimes run certain operations background jobs . Alternatively, can also run background R scripts desire.section B Environment, History, Connections, Tutorial tabs\nEnvironment: probably second important tab Rstudio. created variables, defined functions, imported datasets, objects used current session appear , along brief descriptions .\nbroomstick icon tab can used clear current session environment, removing defined objects. basically equivalent restarting Rstudio.\nNext broomstick, ’s icon shows memory usage current R session, well “Import Dataset” option can help load datasets, although primarily try write code hand learning purposes.\n\nHistory: tab, find history previous commands current session, want edit rerun something. can also search history, search just current session previous commands anytime opened Rstudio past.\nConnections/Tutorial: can start special data connections, find extra R tutorials wish.\nEnvironment: probably second important tab Rstudio. created variables, defined functions, imported datasets, objects used current session appear , along brief descriptions .\nbroomstick icon tab can used clear current session environment, removing defined objects. basically equivalent restarting Rstudio.\nNext broomstick, ’s icon shows memory usage current R session, well “Import Dataset” option can help load datasets, although primarily try write code hand learning purposes.\nbroomstick icon tab can used clear current session environment, removing defined objects. basically equivalent restarting Rstudio.Next broomstick, ’s icon shows memory usage current R session, well “Import Dataset” option can help load datasets, although primarily try write code hand learning purposes.History: tab, find history previous commands current session, want edit rerun something. can also search history, search just current session previous commands anytime opened Rstudio past.Connections/Tutorial: can start special data connections, find extra R tutorials wish.section C Files, Plots, Packages, Help, Viewer, Presentation tabs.\nFiles: tab gives small, integrated file explorer. can navigate around computer, create/delete/rename files, copy/move files, etc.\nPlots: plots/graphs make show (set options right, otherwise may show pop-). useful features know:\ntop left corner tab, left/right arrows navigating previous next plots (made multiple plots)\nNext , ’s “Zoom” button opens plot larger window.\nNext, ’s “Export” button allows export plot image/pdf/clipboard. opens window additional export options.\nNext, buttons remove current plot, clear plots.\n\nPackages: can view/install/update/load/unload packages. Note can also install packages using console, like previous section.\nHelp: one useful tabs Rstudio. , can access built R help pages. one FIRST places visit help R functions/objects.\nseveral ways access help pages. Suppose want help install.packages() function. can either run ?install.packages help(install.packages) console, put cursor function code hit F1 key.\nhelp page may contain following sections, presents different types information:\nDescription, showing brief summary purpose function\nUsage, listing available arguments (.e. options). argument = sign value, denotes default value\nArguments, details arguments can found\nDetails, details function can found\nValue, gives info function returns output\nSometimes, sections may appear specialized info\nend, may also find advanced notes, links related functions, additional references, example code demos.\n\n\nViewer: preview Rmd document output appear knitting (learn soon).\ntop corner, buttons letting clear current viewer items, well button open viewer new window default web browser, can also useful sometimes checking work printing/exporting.\n\nPresentation: final tab useful ever make presentations Rstudio, e.g. using R’s Beamer reveal.js integrations.\nFiles: tab gives small, integrated file explorer. can navigate around computer, create/delete/rename files, copy/move files, etc.Plots: plots/graphs make show (set options right, otherwise may show pop-). useful features know:\ntop left corner tab, left/right arrows navigating previous next plots (made multiple plots)\nNext , ’s “Zoom” button opens plot larger window.\nNext, ’s “Export” button allows export plot image/pdf/clipboard. opens window additional export options.\nNext, buttons remove current plot, clear plots.\ntop left corner tab, left/right arrows navigating previous next plots (made multiple plots)Next , ’s “Zoom” button opens plot larger window.Next, ’s “Export” button allows export plot image/pdf/clipboard. opens window additional export options.Next, buttons remove current plot, clear plots.Packages: can view/install/update/load/unload packages. Note can also install packages using console, like previous section.Help: one useful tabs Rstudio. , can access built R help pages. one FIRST places visit help R functions/objects.\nseveral ways access help pages. Suppose want help install.packages() function. can either run ?install.packages help(install.packages) console, put cursor function code hit F1 key.\nhelp page may contain following sections, presents different types information:\nDescription, showing brief summary purpose function\nUsage, listing available arguments (.e. options). argument = sign value, denotes default value\nArguments, details arguments can found\nDetails, details function can found\nValue, gives info function returns output\nSometimes, sections may appear specialized info\nend, may also find advanced notes, links related functions, additional references, example code demos.\n\nseveral ways access help pages. Suppose want help install.packages() function. can either run ?install.packages help(install.packages) console, put cursor function code hit F1 key.help page may contain following sections, presents different types information:\nDescription, showing brief summary purpose function\nUsage, listing available arguments (.e. options). argument = sign value, denotes default value\nArguments, details arguments can found\nDetails, details function can found\nValue, gives info function returns output\nSometimes, sections may appear specialized info\nend, may also find advanced notes, links related functions, additional references, example code demos.\nDescription, showing brief summary purpose functionUsage, listing available arguments (.e. options). argument = sign value, denotes default valueArguments, details arguments can foundDetails, details function can foundValue, gives info function returns outputSometimes, sections may appear specialized infoAt end, may also find advanced notes, links related functions, additional references, example code demos.Viewer: preview Rmd document output appear knitting (learn soon).\ntop corner, buttons letting clear current viewer items, well button open viewer new window default web browser, can also useful sometimes checking work printing/exporting.\ntop corner, buttons letting clear current viewer items, well button open viewer new window default web browser, can also useful sometimes checking work printing/exporting.Presentation: final tab useful ever make presentations Rstudio, e.g. using R’s Beamer reveal.js integrations.concludes tour basic Rstudio interface. also file editor window (also known source panel/window) discuss later section ??, now, let’s learn run basic R commands!","code":""},{"path":"rstudio-intro.html","id":"r-basics","chapter":"2 Intro to R/Rstudio","heading":"2.3 Basics of R","text":"section, give brief introduction working R. prior coding experience assumed. highly encouraged copy run examples read. time capacity, also encouraged peruse linked help pages extra reference links, mandatory.","code":""},{"path":"rstudio-intro.html","id":"r-running","chapter":"2 Intro to R/Rstudio","heading":"2.3.1 Running R code","text":"main way run R code type copy console. Comments can written hashtag # run. output, displayed either console directly ’s text, plot window ’s visual. notes, output shown separate box , starting ## .Try running examples console observe output:[1] appears start output line just means first output value. bracketed numbers part actual output ignored.functions notes automatically link online help pages (help pages inside Rstudio saw previous section). Try clicking barplot() function previous code block see help page.","code":"\n# this line is a comment and will not be run\n# use the copy button in the top corner to easily run this example --->\nprint(\"output is shown here\") # you can also add comments here## [1] \"output is shown here\"\n# a VERY simple barplot\n# the c() function creates a vector of numbers\nbarplot(c(1, 3, 2))"},{"path":"rstudio-intro.html","id":"r-math","chapter":"2 Intro to R/Rstudio","heading":"2.3.2 Basic math","text":"One first things learn R use calculator basic math. Operators like +, -, *, /, ^, parentheses ( ) work just like ’d expect. Note R respects standard order operations (see page operation order details).R sometimes output scientific notation, especially number exactly numerically represented due computing limitations. example, compute 2^50 R show result 1.1259e+15, .e. \\(1.1259\\times10^{15}\\). can also type scientific notation R understand .Also note due limitations computers represent numbers, R distinguish 2 numbers differ less \\(2\\times10^{-16}\\), 0.0000000000000002.can also perform integer division R, .e. dividing get quotient remainder, using %/% quotient %% remainder. allows check, example, number even odd.Operators like %/% %% may seem strange first, work just like binary operators R + ^ . examples operators like %% %>% learn later.Trigonometric functions sin(), cos(), tan(), (inverses asin(), acos(), atan() – prefix means arc–), also work ’d expect use radian units. Note pi conveniently predefined \\(\\pi\\). Hyperbolic trig functions also exist need .Exponential logarithm functions exp() log(), also work ’d expect default natural base \\(e\\). Note log function optional base argument using different base. also special base 10 2 versions log10() log2() .Additionally, abs() computes absolute value sqrt() square root (note convention, positive root returned). Taking square root negative number return NaN.","code":"\n(-5 * -3^2 + 4) / 7 - 6## [1] 1\n2^50## [1] 1.1259e+15\n13 %/% 2## [1] 6\n13 %% 2## [1] 1\ncos(2 * pi)## [1] 1\natan(-1) * 4## [1] -3.141593\nlog(exp(2)) * log10(100)## [1] 4\nlog(3^5, base = 3)## [1] 5\nsqrt(abs(-9))## [1] 3"},{"path":"rstudio-intro.html","id":"r-specials","chapter":"2 Intro to R/Rstudio","heading":"2.3.3 Special values","text":"already mentioned pi predefined. important special values R. TRUE FALSE, along abbreviations T F also predefined. Note capitalization; R case-sensitive language true, True, t TRUE (first two defined, t() matrix transpose function).important thing note R, kind math turns TRUE 1 FALSE 0.Mathematical expressions may also return NaN Number, .e. undefined; Inf infinite. Note R differentiates positive infinity Inf negative infinity -Inf.Additionally, NA used represent missing values, .e. data available. Note NA NaN . learn later handle NA missing values.","code":"\nT## [1] TRUE\ntrue## Error in eval(expr, envir, enclos): object 'true' not found\nexp(FALSE) * (TRUE + sqrt(TRUE))## [1] 2\nsqrt(-4)## [1] NaN\n1 / 0## [1] Inf\nlog(0)## [1] -Inf"},{"path":"rstudio-intro.html","id":"assignment","chapter":"2 Intro to R/Rstudio","heading":"2.3.4 Assignment","text":"R, variables typically assigned using <- operator, just less < minus - put together. can also use = <- recommended stylistic reasons (see blog post details). class, acceptable prefer <- notes. 2There convenient keyboard shortcuts assignment <- operator: ALT + – Windows Option (⌥) + – Mac.Generally, = reserved setting arguments inside functions, e.g. like previous code chunk computed log() custom base setting base argument.Variable names can combination upper lower-case letters, numbers, period . underscore _ (treated similar letters), one caveat: variables must begin letter period, number underscore. may use characters variable names. 3Observe results expression saved variable, R print default. often confusing first time R users, since may seem like nothing happened. example, running following:produces visible output. normal behavior, since output redirected variable. inspect result, must explicitly call print() object :","code":"\n# this is preferred\nx <- 5\nprint(x)## [1] 5\n# this is equivalent and acceptable, but discouraged\nx = 5\nprint(x)## [1] 5\nlog(3^5, base = 3)## [1] 5\n# these variable names are ok,\n# also remember R is case sensitive!\nvar1 <- 1\nVar1 <- 2\n.OtherVariable <- 3\nanother.variable_42 <- 4\n\nvar1 + Var1 + .OtherVariable + another.variable_42## [1] 10\n# even these morse code looking variable names,\n# while not recommended, are technically ok:\n. <- 1\n.. <- 2\n._ <- 3\n._..__ <- 4\n\n. + .. + ._ + ._..__## [1] 10# these variable names will raise errors:\n#   1var, _var, bad-var,   e.g.:\n1var <- 1## Error: unexpected symbol in \"1var\"\nresult <- 3 * 4 - 5\nresult## [1] 7"},{"path":"rstudio-intro.html","id":"summary-functions","chapter":"2 Intro to R/Rstudio","heading":"2.3.5 Summary functions","text":"far, ’ve seen functions run individual values, also functions R run summarize dataset. often statistical nature. give brief summary compute R. -depth discussion meaning applications saved later course.Suppose gather sample observe following values: 3, 6, 6, 2, 4, 1, 5 (don’t worry mean, ’re just using demo). can create vector using c() function store data save :sum() length() functions work like expect produce sum length sample. can use compute mean sample, can also done directly using mean().can also find median (.e. middle number) median() function. (Sadly, ’s built-mode function R, can achieved packages.)can generalize median (50-th percentile) compute percentile using quantile() function, e.g. suppose want compute 30-th percentile:standard deviation another important statistic (think distance average observation mean) can computed using sd(). Note equivalent square root variance can found var().can also find min() max() sample (together give us range() dataset).Another important function working samples %% operator, lets us check value exists dataset.One final statistical function extremely common cor() computes correlation 2 vectors. E.g. suppose following \\((x,y)\\) points: (3.4,1), (5,4.6), (5.7,6.8), (6.5,5.3). can compute correlation \\(x\\) \\(y\\) points like :miscellaneous functions working vectors sometimes useful won’t cover detail now, can explore , prod() computing product numbers vector, sort() sorting vector, rev() reversing vector, unique() getting unique values vector, scale() linearly shifting scaling data mean 0 standard deviation 1, cumsum() cumprod() cumulative sum product along vector, many many …","code":"\ndata <- c(3, 6, 6, 2, 4, 1, 5)\ndata## [1] 3 6 6 2 4 1 5\nsum(data) / length(data)## [1] 3.857143\nmean(data)## [1] 3.857143\nmedian(data)## [1] 4\nquantile(data, 0.3)## 30% \n## 2.8\nsqrt(var(data))## [1] 1.9518\nsd(data)## [1] 1.9518\nmin(data)## [1] 1\nmax(data)## [1] 6\n# 6 appears in the sample\n6 %in% data## [1] TRUE\n# 7 does not appear in the sample\n7 %in% data## [1] FALSE\nx = c(5, 6.5, 3.4, 5.7)\ny = c(4.6, 5.3, 1, 6.8)\ncor(x,y)## [1] 0.8690548"},{"path":"rstudio-intro.html","id":"logical-comparison","chapter":"2 Intro to R/Rstudio","heading":"2.3.6 Logical comparison","text":"Finally, let’s learn basic logical comparisons. crucial data cleaning filtering operations later .R, equality comparison done using == operator. Note double equal sign; single equal assignments arguments. Inequality can checked using !=.Note ! used individually operator, .e. turns TRUE FALSE vice versa.Inequalities done using <, <=, >, >=, less (equal ) greater (equal ).Logical statements can chained together using & operator well | operator (vertical bar character typed keyboards using SHIFT + \\).& return true expressions sides true; | return true least one expressions sides true. Note & appears higher R’s order operations |.can course chain together R commands compare complicated expressions. sky limit!","code":"\nx <- (2 + 3)^2\nx == 25## [1] TRUE\n# if instead we ask \"is x not equal to 25\", we should get FALSE\nx != 25## [1] FALSE\n!TRUE## [1] FALSE\n# this is equivalent to x != 25\n!(x == 25)## [1] FALSE\nx < 30## [1] TRUE\nx >= 25## [1] TRUE\n(x > 20) & (x <= 30)## [1] TRUE\n(x > 20) | (x != 25)## [1] TRUE\n# check if x² is even OR if mean of data + 2 * sd is greater than the max\n# note order of operations means we don't need extra parentheses\n# of course, you can add extra parentheses for readability if you wish!\nx^2 %% 2 == 0 | mean(data) + 2 * sd(data) > max(data)## [1] TRUE"},{"path":"rstudio-intro.html","id":"packages","chapter":"2 Intro to R/Rstudio","heading":"2.3.7 Packages","text":"last topic, let’s briefly discuss packages. One best features R ability anyone easily write distribute packages CRAN (Comprehensive R Archive Network). Currently, 20966 packages available CRAN. also 2300 packages bioinformatics-specific package archive Bioconductor, well countless GitHub.course, primarily make use Tidyverse suite packages, contains several important packages data science: readr reading data, ggplot2 plotting data, dplyr tidyr cleaning data, lubridate stringr working dates strings. learn course progresses.important thing need remember packages :install ; load dailyI.e. need install package computer, need load every time reopen Rstudio want use (unless ’re one people never closes programs). course want setup R/Rstudio new computer, need install well.","code":""},{"path":"rstudio-intro.html","id":"install-a-package","chapter":"2 Intro to R/Rstudio","heading":"2.3.7.1 Install a package","text":"Unless ’re extremely niche work, generally packages want use CRAN can easily installed one time running following.’s important check output messages see install successful, , find important “Error:…” keywords use troubleshooting. Sometimes R ask different things install:R asks use “personal library”, say yes. just means can’t store package files system folder due system permissions, store somewhere else (typically user directory).R asks install “source”, try first; fails, retry yes. just means want R prioritize using precompiled executable files installing, generally much faster.R asks update existing packages installing new package, entirely . like update packages regularly, ’s usually harm don’t want update immediately.\ntry update packages currently loaded, R may ask first “restart R”, usually good idea.\ntry update packages currently loaded, R may ask first “restart R”, usually good idea.","code":"\n# you should have already installed tidyverse from last chapter\n# note the package name MUST be in quotes\ninstall.packages(\"tidyverse\")"},{"path":"rstudio-intro.html","id":"loading-a-package","chapter":"2 Intro to R/Rstudio","heading":"2.3.7.2 Loading a package","text":"can load package using either library() require(), basically . 4Upon loading, many packages print various diagnostic messages console. generally completely ignorable. Sometimes warn “Conflicts”, standard just means overridden default functions. E.g. can see filter() function package dplyr overwritten pre-loaded filter() function stats package.may already guessed message output , can also access function another package without loading entire package using syntax package::function(). often done either avoid name conflicts clarify reader functions come packages.","code":"\nlibrary(tidyverse)## ── Conflicts ────────────────────── tidyverse_conflicts() ──\n## ✖ tidyr::extract()        masks magrittr::extract()\n## ✖ dplyr::filter()         masks stats::filter()\n## ✖ rvest::guess_encoding() masks readr::guess_encoding()\n## ✖ dplyr::lag()            masks stats::lag()\n## ✖ purrr::set_names()      masks magrittr::set_names()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"rstudio-intro.html","id":"r-cheat-sheets","chapter":"2 Intro to R/Rstudio","heading":"2.3.8 R cheat sheets","text":"probably important R commands need know now. curated short selection R “cheat sheets” reference need , rough order useful think first time R learner.Matt Baggott’s R Reference Card v2.0 nice complete one-stop-shop R’s built-functions.IQSS’s Base R Cheat Sheet Alexey Shipunov’s One Page R Reference Card slightly shorter curated, offer nice, tighter set critical R commands, along useful examples syntax.slightly longer complete reference manual R, especially details R works different object types data structures, Emmanuel Paradis’s R Beginners may helpful.","code":""},{"path":"rstudio-intro.html","id":"r-markdown","chapter":"2 Intro to R/Rstudio","heading":"2.4 R Markdown","text":"final section chapter, introduce R Markdown, document format allows seamlessly organize integrate text R code/output easily readable editable way. also supports many output formats, including reports, articles, presentations, ebooks, even websites (fact, entire website written R Markdown, GitHub repo even maintained using Rstudio; can view source code page using “View source” button right sidebar).Let’s start example! basic R Markdown demo file:","code":"---\ntitle: \"Demo Rmd file\"\nauthor: \"Jane Doe\"\ndate: \"2024-06-20\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# Heading\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r cars}\nsummary(cars)\n```\n\n## Including Plots\n\nYou can also embed plots, for example:\n\n```{r pressure, echo=FALSE}\nplot(pressure)\n```\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot."},{"path":"heading.html","id":"heading","chapter":"3 Heading","heading":"3 Heading","text":"R Markdown document. Markdown simple formatting syntax authoring HTML, PDF, MS Word documents. details using R Markdown see http://rmarkdown.rstudio.com.click Knit button document generated includes content well output embedded R code chunks within document. can embed R code chunk like :","code":"\nsummary(cars)##      speed           dist       \n##  Min.   : 4.0   Min.   :  2.00  \n##  1st Qu.:12.0   1st Qu.: 26.00  \n##  Median :15.0   Median : 36.00  \n##  Mean   :15.4   Mean   : 42.98  \n##  3rd Qu.:19.0   3rd Qu.: 56.00  \n##  Max.   :25.0   Max.   :120.00"},{"path":"heading.html","id":"including-plots","chapter":"3 Heading","heading":"3.1 Including Plots","text":"can also embed plots, example:Note echo = FALSE parameter added code chunk prevent printing R code generated plot.","code":""}]
