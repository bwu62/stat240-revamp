[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"Intro (maybe write last?)thins hit:use book\nbook conventions\nsearch\nsyntax highlighting\nauto link help pages\nbook conventionssearchsyntax highlightingauto link help pagesview source & edit contributionsprerequisiteswill teach everything, just provide foundation learningacknowledgments impact contributionsstuff add:dark mode?auto-index generator _common.R?cheatsheet repositorysample graded, commentated papers (example , AB, B, BC, C, D, F)grade comparing reference papersconditional stratified sample papers based distribution grades groupafter paring samples, ask Derek & Cameron help grading evaluation calibrating paperspare , use focused sample calibrate TAs/instructors needed?glossary?notes self:use params control:\ncourse directory\nhw/ds solution generation files (separate private repo?)\ncourse directoryhw/ds solution generation files (separate private repo?)build db past 240 statsrethink discord management","code":""},{"path":"setup.html","id":"setup","chapter":"1 Setup","heading":"1 Setup","text":"chapter take steps necessary fully setup computer. several things need :First, section 1.1 install R Rstudio.Next, section 1.2 install necessary R packages configure recommended Rstudio settings.Finally, section 1.3 setup organization system files.","code":""},{"path":"setup.html","id":"setup-install","chapter":"1 Setup","heading":"1.1 R/Rstudio setup","text":"using R Rstudio throughout course.R free open-source statistical computing software.Rstudio IDE (integrated development environment) makes developing R much easier.\nprefer, can also use different IDE like Visual Studio Jupyter.\nprefer, can also use different IDE like Visual Studio Jupyter.R Rstudio two different programs need installed! Also, previously installed R Rstudio, highly recommended first completely uninstall reinstalling latest version avoid conflicts (instructions Windows Mac).first install latest release R, version 4.4.0 released Apr 24, 2024; install Rstudio. instructions separated operating system, depending Windows Mac machine.Linux system, follow one linked instructions .Chromebook, try steps.","code":""},{"path":"setup.html","id":"setup-win","chapter":"1 Setup","heading":"1.1.1 Windows instructions","text":"Download R-4.4.0-win.exe run , accepting default settings.Download R-4.4.0-win.exe run , accepting default settings.Download Rstudio-latest.exe run , accepting default settings.Download Rstudio-latest.exe run , accepting default settings.Sometimes, R may need recompile package installation, require Rtools utility. download right version, check system’s page look “System type” line.\nshows “… x64-based processor”, download Rtools installer run , accepting default settings.\nshows “… ARM-based processor”, download Rtools installer run , accepting default settings.\nSometimes, R may need recompile package installation, require Rtools utility. download right version, check system’s page look “System type” line.shows “… x64-based processor”, download Rtools installer run , accepting default settings.shows “… ARM-based processor”, download Rtools installer run , accepting default settings.Now, R Rstudio setup. check installation, find “Rstudio” start menu run . asked choose installation, just accept default click OK.get window looks like , ’re set ready move next section!","code":""},{"path":"setup.html","id":"setup-mac","chapter":"1 Setup","heading":"1.1.2 Mac instructions","text":"First, need determine right R installer file specific machine. Open Apple menu top left corner screen open “mac”.\nshows “Chip: Apple M1/M2/M3”, download R-4.4.0-arm64.pkg run , accepting default settings.\nshows “Processor: …Intel Core”, download R-4.4.0-x86_64.pkg run , accepting default settings.\nget error, check OS version window. ’s older (.e. <11) may need either upgrade OS download older version .\nshows “Chip: Apple M1/M2/M3”, download R-4.4.0-arm64.pkg run , accepting default settings.shows “Processor: …Intel Core”, download R-4.4.0-x86_64.pkg run , accepting default settings.get error, check OS version window. ’s older (.e. <11) may need either upgrade OS download older version .Now, download Rstudio-latest.dmg install . Note dmg virtual disk image file, need follow steps install :\nDouble click file open . mount virtual drive desktop open new Finder window.\nnew window, drag Rstudio icon Applications directory. install computer.\nOpen new Finder window, go Applications directory, find new Rstudio program drag dock easy access.\n(Optional) can now unmount virtual disk. Right click mounted virtual disk desktop choose “Unmount”, alternatively find mounted drive right side dock drag trash bin. can also delete .dmg install file.\nDouble click file open . mount virtual drive desktop open new Finder window.new window, drag Rstudio icon Applications directory. install computer.Open new Finder window, go Applications directory, find new Rstudio program drag dock easy access.(Optional) can now unmount virtual disk. Right click mounted virtual disk desktop choose “Unmount”, alternatively find mounted drive right side dock drag trash bin. can also delete .dmg install file.many () systems, two additional programs need installed everything run smoothly. recommended everyone install just case (’s harm didn’t actually need ).\nDownload XQuartz-2.8.5.pkg run , accepting default settings. installs tool Rstudio uses display certain outputs.\nUsing either Spotlight, Launchpad, Applications folder, open “Terminal” type copy line xcode-select --install hit enter, follow -screen instructions. may asked fingerprint password (note password show type, normal done security purposes).\nDownload XQuartz-2.8.5.pkg run , accepting default settings. installs tool Rstudio uses display certain outputs.Using either Spotlight, Launchpad, Applications folder, open “Terminal” type copy line xcode-select --install hit enter, follow -screen instructions. may asked fingerprint password (note password show type, normal done security purposes).machines, R Rstudio may blocked OS overabundance caution. Follow steps unblock try .Now, assuming everything went smoothly, R Rstudio setup. check installation, find “Rstudio” Dock Applications directory run . asked choose installation, just accept default click OK.get window looks like , ’re set!","code":""},{"path":"setup.html","id":"setup-packs-config","chapter":"1 Setup","heading":"1.2 Packages/config","text":"continuing, make sure can open Rstudio correct version (R-4.4.0) installed!Next, install necessary packages configure recommended options improve workflow.Open Rstudio. Console window, type copy line install.packages(c(\"tidyverse\",\"rmarkdown\")) hit enter.\nRstudio asks whether “use personal library”, choose yes.\nRstudio asks whether “install source”, first try choosing work people. fails, try repeating step 1, time choose yes.\nMake sure see either “successfully unpacked” “downloaded binary packages ” console messages confirm installation succeeded.Open Rstudio. Console window, type copy line install.packages(c(\"tidyverse\",\"rmarkdown\")) hit enter.Rstudio asks whether “use personal library”, choose yes.Rstudio asks whether “install source”, first try choosing work people. fails, try repeating step 1, time choose yes.Make sure see either “successfully unpacked” “downloaded binary packages ” console messages confirm installation succeeded.Next, menu bar top, go “Tools” > “Global Options”.\nfirst page, “Workspace” section, set following:\nTurn “Restore .RData workspace startup”\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.\n\nChange “Save workspace .Rdata exit:” “Never”\nstops Rstudio asking shutdown want save session, also preventing clutter.\n\n\nNext, “R Markdown” page Options window, set following:\nChange “Show output preview :” “Viewer Pane”\nimproves workflow displaying plots Viewer pane instead opening new window.\n\nTurn “Show output inline R Markdown documents”\nalso improves workflow displaying output console instead inline documents.\n\n\n(Optional) wish customize interface, can go “Appearance” page change font theme. 1\nPress OK save changes.\nLOTS options can feel free explore later , now move .Next, menu bar top, go “Tools” > “Global Options”.first page, “Workspace” section, set following:\nTurn “Restore .RData workspace startup”\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.\n\nChange “Save workspace .Rdata exit:” “Never”\nstops Rstudio asking shutdown want save session, also preventing clutter.\n\nTurn “Restore .RData workspace startup”\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.\nensures every time close reopen Rstudio start fresh session uncluttered junk previous sessions.Change “Save workspace .Rdata exit:” “Never”\nstops Rstudio asking shutdown want save session, also preventing clutter.\nstops Rstudio asking shutdown want save session, also preventing clutter.Next, “R Markdown” page Options window, set following:\nChange “Show output preview :” “Viewer Pane”\nimproves workflow displaying plots Viewer pane instead opening new window.\n\nTurn “Show output inline R Markdown documents”\nalso improves workflow displaying output console instead inline documents.\n\nChange “Show output preview :” “Viewer Pane”\nimproves workflow displaying plots Viewer pane instead opening new window.\nimproves workflow displaying plots Viewer pane instead opening new window.Turn “Show output inline R Markdown documents”\nalso improves workflow displaying output console instead inline documents.\nalso improves workflow displaying output console instead inline documents.(Optional) wish customize interface, can go “Appearance” page change font theme. 1Press OK save changes.LOTS options can feel free explore later , now move .Due poor design, need repeat previous R Markdown configuration steps Rstudio duplicates settings another menu.\nmenu bar top, go “File” > “New File” > “R Markdown”. Ignore options new window click “OK” create new R Markdown file (learn R Markdown files later).\nnew editor pane, open gear-icon dropdown menu make sure reselect options (highlighted red).\nDue poor design, need repeat previous R Markdown configuration steps Rstudio duplicates settings another menu.menu bar top, go “File” > “New File” > “R Markdown”. Ignore options new window click “OK” create new R Markdown file (learn R Markdown files later).new editor pane, open gear-icon dropdown menu make sure reselect options (highlighted red).Now R/Rstudio properly setup.","code":""},{"path":"setup.html","id":"setup-files","chapter":"1 Setup","heading":"1.3 File organization","text":"lot files keep track course, highly recommended create neat directory structure computer help organize files. recommend directory structure similar :tree diagram shows somewhere computer (“..”) make “STAT240” directory. Inside, directories like “homework” “discussion” subdirectory specific assignment (e.g. “hw01”, “hw02”, “ds01”, “ds02”, etc..).also recommend creating directories “data”, place datasets download; “notes”, can place notes download take; “project”, can place project files assigned later. necessary, can also create directories discretion.Make sure STAT240 folder backed cloud synchronized app like OneDrive, Box, iCloud. programs sometimes interfere R/Rstudio may also cut larger datasets.recommend pick different parent directory (“..”) “Desktop” “Documents” since often backed default many modern systems. good alternative either “Downloads” directory usually backed , user’s home directory (instructions Windows Mac).creation, can make folder convenient access making shortcut desktop, pinning somewhere accessible like Quick Access Windows Dock Macs.","code":"..\n└── STAT240\n    ├── data\n    ├── discussion\n    │   ├── ds01\n    │   ├── ds02\n    │   └── ds03\n    |         ⋮\n    ├── homework\n    │   ├── hw01\n    │   ├── hw02\n    │   └── hw03\n    |         ⋮\n    ├── notes\n    └── project"},{"path":"setup.html","id":"setup-troubleshooting-faq","chapter":"1 Setup","heading":"1.4 Setup troubleshooting FAQ","text":"**FAQ added collect commonly encountered problems**","code":""},{"path":"rstudio-intro.html","id":"rstudio-intro","chapter":"2 Intro to R/Rstudio","heading":"2 Intro to R/Rstudio","text":"chapter introduce basics Rstudio help develop workflow testing R code producing beautiful R Markdown documents, using throughout semester.","code":""},{"path":"rstudio-intro.html","id":"rstudio-why","chapter":"2 Intro to R/Rstudio","heading":"2.1 Why Rstudio?","text":"Rstudio free open-source IDE (integrated development environment) designed help facilitate development R code. course don’t need (can write R code using text editor execute terminal) using Rstudio gives access host modern conveniences, just name :R code completion & highlightingeasy access interpreter console, plots, history, help, etc.robust debugging toolseasy package/environment managementcustom project workflows (e.g. building websites, presentations, packages, etc.)GitHub SVN integrationand much …learn small fraction Rstudio offer course. always, encouraged explore .","code":""},{"path":"rstudio-intro.html","id":"rstudio-interface","chapter":"2 Intro to R/Rstudio","heading":"2.2 Rstudio interface","text":"default interface setup Rstudio. course can customize , see ---box:brief description purpose tab. ones using frequently course highlighted bold.section find Console, Terminal, Background Jobs tabs\nConsole: arguably important tab Rstudio. provides direct access R interpreter, allowing run code see outputs.\n\nuseful tips working console:\ncan use TAB key autocomplete code type. works built functions, user-defined objects, even file paths (later). highly recommended make use autocomplete much possible can help prevent typo errors code.\ncan also easily rerun previously executed commands either using keyboard arrow keys navigate history, even search history using CTRL/CMD + R.\nTerminal: tab opens terminal current working directory (see section ??). default, Git Bash terminal Windows zsh terminal Macs, can easily changed Options menu.\nBackground Jobs: Rstudio may sometimes run certain operations background jobs . Alternatively, can also run background R scripts desire.\nConsole: arguably important tab Rstudio. provides direct access R interpreter, allowing run code see outputs.can use TAB key autocomplete code type. works built functions, user-defined objects, even file paths (later). highly recommended make use autocomplete much possible can help prevent typo errors code.can also easily rerun previously executed commands either using keyboard arrow keys navigate history, even search history using CTRL/CMD + R.Terminal: tab opens terminal current working directory (see section ??). default, Git Bash terminal Windows zsh terminal Macs, can easily changed Options menu.Background Jobs: Rstudio may sometimes run certain operations background jobs . Alternatively, can also run background R scripts desire.section B Environment, History, Connections, Tutorial tabs\nEnvironment: probably second important tab Rstudio. created variables, defined functions, imported datasets, objects used current session appear , along brief descriptions .\nbroomstick icon tab can used clear current session environment, removing defined objects. basically equivalent restarting Rstudio.\nNext broomstick, ’s icon shows memory usage current R session, well “Import Dataset” option can help load datasets, although primarily try write code hand learning purposes.\n\nHistory: tab, find history previous commands current session, want edit rerun something. can also search history, search just current session previous commands anytime opened Rstudio past.\nConnections/Tutorial: can start special data connections, find extra R tutorials wish.\nEnvironment: probably second important tab Rstudio. created variables, defined functions, imported datasets, objects used current session appear , along brief descriptions .\nbroomstick icon tab can used clear current session environment, removing defined objects. basically equivalent restarting Rstudio.\nNext broomstick, ’s icon shows memory usage current R session, well “Import Dataset” option can help load datasets, although primarily try write code hand learning purposes.\nbroomstick icon tab can used clear current session environment, removing defined objects. basically equivalent restarting Rstudio.Next broomstick, ’s icon shows memory usage current R session, well “Import Dataset” option can help load datasets, although primarily try write code hand learning purposes.History: tab, find history previous commands current session, want edit rerun something. can also search history, search just current session previous commands anytime opened Rstudio past.Connections/Tutorial: can start special data connections, find extra R tutorials wish.section C Files, Plots, Packages, Help, Viewer, Presentation tabs.\nFiles: tab gives small, integrated file explorer. can navigate around computer, create/delete/rename files, copy/move files, etc.\nPlots: plots/graphs make show (set options right, otherwise may show pop-). useful features know:\ntop left corner tab, left/right arrows navigating previous next plots (made multiple plots)\nNext , ’s “Zoom” button opens plot larger window.\nNext, ’s “Export” button allows export plot image/pdf/clipboard. opens window additional export options.\nNext, buttons remove current plot, clear plots.\n\nPackages: can view/install/update/load/unload packages. Note can also install packages using console, like previous section.\nHelp: one useful tabs Rstudio. , can access built R help pages. one FIRST places visit help R functions/objects.\nseveral ways access help pages. Suppose want help install.packages() function. can either run ?install.packages help(install.packages) console, put cursor function code hit F1 key.\nhelp page may contain following sections, presents different types information:\nDescription, showing brief summary purpose function\nUsage, listing available arguments (.e. options). argument = sign value, denotes default value\nArguments, details arguments can found\nDetails, details function can found\nValue, gives info function returns output\nSometimes, sections may appear specialized info\nend, may also find advanced notes, links related functions, additional references, example code demos.\n\n\nViewer: preview Rmd document output appear knitting (learn soon).\ntop corner, buttons letting clear current viewer items, well button open viewer new window default web browser, can also useful sometimes checking work printing/exporting.\n\nFiles: tab gives small, integrated file explorer. can navigate around computer, create/delete/rename files, copy/move files, etc.Plots: plots/graphs make show (set options right, otherwise may show pop-). useful features know:\ntop left corner tab, left/right arrows navigating previous next plots (made multiple plots)\nNext , ’s “Zoom” button opens plot larger window.\nNext, ’s “Export” button allows export plot image/pdf/clipboard. opens window additional export options.\nNext, buttons remove current plot, clear plots.\ntop left corner tab, left/right arrows navigating previous next plots (made multiple plots)Next , ’s “Zoom” button opens plot larger window.Next, ’s “Export” button allows export plot image/pdf/clipboard. opens window additional export options.Next, buttons remove current plot, clear plots.Packages: can view/install/update/load/unload packages. Note can also install packages using console, like previous section.Help: one useful tabs Rstudio. , can access built R help pages. one FIRST places visit help R functions/objects.\nseveral ways access help pages. Suppose want help install.packages() function. can either run ?install.packages help(install.packages) console, put cursor function code hit F1 key.\nhelp page may contain following sections, presents different types information:\nDescription, showing brief summary purpose function\nUsage, listing available arguments (.e. options). argument = sign value, denotes default value\nArguments, details arguments can found\nDetails, details function can found\nValue, gives info function returns output\nSometimes, sections may appear specialized info\nend, may also find advanced notes, links related functions, additional references, example code demos.\n\nseveral ways access help pages. Suppose want help install.packages() function. can either run ?install.packages help(install.packages) console, put cursor function code hit F1 key.help page may contain following sections, presents different types information:\nDescription, showing brief summary purpose function\nUsage, listing available arguments (.e. options). argument = sign value, denotes default value\nArguments, details arguments can found\nDetails, details function can found\nValue, gives info function returns output\nSometimes, sections may appear specialized info\nend, may also find advanced notes, links related functions, additional references, example code demos.\nDescription, showing brief summary purpose functionUsage, listing available arguments (.e. options). argument = sign value, denotes default valueArguments, details arguments can foundDetails, details function can foundValue, gives info function returns outputSometimes, sections may appear specialized infoAt end, may also find advanced notes, links related functions, additional references, example code demos.Viewer: preview Rmd document output appear knitting (learn soon).\ntop corner, buttons letting clear current viewer items, well button open viewer new window default web browser, can also useful sometimes checking work printing/exporting.\ntop corner, buttons letting clear current viewer items, well button open viewer new window default web browser, can also useful sometimes checking work printing/exporting.concludes tour basic Rstudio interface. also file editor window (also known source panel/window) discuss later section ??, now, let’s learn run basic R commands!","code":""},{"path":"rstudio-intro.html","id":"r-basics","chapter":"2 Intro to R/Rstudio","heading":"2.3 Basics of R","text":"section, give brief introduction working R. prior coding experience assumed. highly encouraged copy run examples provided read, well try exercises peruse extra references provided.","code":""},{"path":"rstudio-intro.html","id":"r-running","chapter":"2 Intro to R/Rstudio","heading":"2.3.1 Running R code","text":"main way run R code type copy console. Comments can written hashtag # run. output, displayed either console directly ’s text, plot window ’s visual. notes, output shown separate box , starting ## .Try running examples console observe output:functions notes automatically link online help pages (help pages inside Rstudio saw previous section). Try clicking barplot() function previous code block see help page.","code":"\n# this line is a comment and will not be run\n# use the copy button in the top corner to easily run this example --->\nprint(\"output is shown here\") # you can also add comments here## [1] \"output is shown here\"\n# a VERY simple barplot\n# the c() function creates a vector of numbers\nbarplot(c(1, 3, 2))"},{"path":"rstudio-intro.html","id":"r-math","chapter":"2 Intro to R/Rstudio","heading":"2.3.2 Basic math","text":"One first things learn R use calculator basic math. Operators like +, -, *, /, ^, parentheses ( ) work just like ’d expect. Note R respects standard order operations (see page operation order details).R also supports scientific notation using e infix (note higher order precedence exponentiation). R supports variety rounding functions, see help page rounding details.Due limits computers represent numbers, R distinguish 2 numbers differ less \\(2\\times10^{-16}\\), 0.0000000000000002.can also perform integer division R, .e. dividing get quotient remainder, using %/% quotient %% remainder. allows check, example, number even odd.Operators like %/% %% may seem strange first, work just like binary operators R + ^ . examples operators like %% %>% learn later.Trigonometric functions sin(), cos(), tan(), (inverses asin(), acos(), atan() – prefix means arc–), also work ’d expect use radian units. Note pi conveniently predefined \\(\\pi\\). Hyperbolic trig functions also exist need .Exponential logarithm functions exp() log(), also work ’d expect default natural base \\(e\\). Note log function optional base argument using different base. also special base 10 2 versions log10() log2() .Additionally, abs() computes absolute value sqrt() square root (note convention, positive root returned). Taking square root negative number return NaN.","code":"\n(-5 * -3^2 + 4) / 7 - 6## [1] 1\n# surface area of Earth in square miles using 4πr² (to 3 sig figs)\nsignif(4 * 3.14 * 3.96e3^2, 3)## [1] 1.97e+08\n13 %/% 2## [1] 6\n13 %% 2## [1] 1\ncos(2 * pi)## [1] 1\natan(-1) * 4## [1] -3.141593\nlog(exp(2)) * log10(100)## [1] 4\nlog(3^5, base = 3)## [1] 5\nsqrt(abs(-9))## [1] 3"},{"path":"rstudio-intro.html","id":"r-specials","chapter":"2 Intro to R/Rstudio","heading":"2.3.3 Special values","text":"already mentioned pi predefined. important special values R. TRUE FALSE, along abbreviations T F also predefined. Note capitalization; R case-sensitive language true, True, t TRUE (first two defined, t() matrix transpose function).Mathematical expressions may also return NaN Number, .e. undefined; Inf infinite. Note R differentiates positive infinity Inf negative infinity -Inf.Additionally, NA used represent missing values, .e. data available. Note NA NaN . learn later handle NA missing values.","code":"\nT## [1] TRUE\ntrue## Error in eval(expr, envir, enclos): object 'true' not found\nsqrt(-4)## [1] NaN\n1 / 0## [1] Inf\nlog(0)## [1] -Inf"},{"path":"rstudio-intro.html","id":"assignment","chapter":"2 Intro to R/Rstudio","heading":"2.3.4 Assignment","text":"R, variables typically assigned using <- operator, just less < minus - put together. can also use = <- recommended stylistic reasons (see blog post details). class, acceptable prefer <- notes. 2There convenient keyboard shortcuts assignment <- operator: ALT + – Windows Option (⌥) + – Mac.Generally, = reserved setting arguments inside functions, e.g. like previous code chunk computed log() custom base setting base argument.Variable names can combination upper lower-case letters, numbers, period . underscore _ (treated similar letters), one caveat: variables must begin letter period, number underscore. may use characters variable names. 3Observe results expression saved variable, R print default. often confusing first time R users, since may seem like nothing happened. example, running following:produces visible output. normal behavior, since output redirected variable. inspect result, must explicitly call print() object :","code":"\n# this is preferred\nx <- 5\nprint(x)## [1] 5\n# this is equivalent and acceptable, but discouraged\nx = 5\nprint(x)## [1] 5\nlog(3^5, base = 3)## [1] 5\n# these variable names are ok,\n# also remember R is case sensitive!\nvar1 <- 1\nVar1 <- 2\n.OtherVariable <- 3\nanother.variable_42 <- 4\n\nvar1 + Var1 + .OtherVariable + another.variable_42## [1] 10\n# even these morse code looking variable names,\n# while not recommended, are technically ok:\n. <- 1\n.. <- 2\n._ <- 3\n._..__ <- 4\n\n. + .. + ._ + ._..__## [1] 10# these variable names will raise errors,\n# so evaluation for this code chunk has been disabled\n1var <- 1\n_var <- 2\nbad-var <- 3\nresult <- 3 * 4 - 5\nresult## [1] 7"},{"path":"rstudio-intro.html","id":"logical-comparison","chapter":"2 Intro to R/Rstudio","heading":"2.3.5 Logical comparison","text":"","code":""},{"path":"rstudio-intro.html","id":"summary-statistics","chapter":"2 Intro to R/Rstudio","heading":"2.3.6 Summary statistics","text":"","code":""},{"path":"rstudio-intro.html","id":"r-cheat-sheets","chapter":"2 Intro to R/Rstudio","heading":"2.3.7 R cheat sheets","text":"https://cran.r-project.org/doc/contrib/Baggott-refcard-v2.pdfhttps://iqss.github.io/dss-workshops/R/Rintro/base-r-cheat-sheet.pdfhttps://herba.msu.ru/shipunov/school/biol_240/en/supp/refcard/rrefc_en.pdfhttps://cran.r-project.org/doc/contrib/Short-refcard.pdf","code":""}]
